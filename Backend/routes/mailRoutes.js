const express = require('express');
const router  = express.Router();
const { createTransport } = require('nodemailer');
const directTransport      = require('nodemailer-direct-transport');

router.post("/send", express.json(), async (req, res) => {
  console.log("üì¨ [send] –ü–æ–ª—É—á–µ–Ω –∑–∞–ø—Ä–æ—Å –Ω–∞ –æ—Ç–ø—Ä–∞–≤–∫—É –ø–∏—Å—å–º–∞");

  const { recipients, subject, text } = req.body;

  // –í–∞–ª–∏–¥–∞—Ü–∏—è
  if (!recipients || typeof recipients !== 'string' || recipients.length < 3)
    return res.status(400).json({ error: "Recipient is required and must be ‚â•3 chars" });
  if (!subject || subject.length < 3)
    return res.status(400).json({ error: "Subject must be at least 3 characters" });
  if (!text || text.length < 3)
    return res.status(400).json({ error: "Message must be at least 3 characters" });

  const emailRegex = /^[^\s@]+@[^\s@]+\.[^\s@]+$/;
  if (!emailRegex.test(recipients))
    return res.status(400).json({ error: "Invalid email format" });

  try {
    console.log("üöÄ [send] –ö–æ–Ω—Ñ–∏–≥—É—Ä–∏—Ä—É–µ–º direct‚Äë—Ç—Ä–∞–Ω—Å–ø–æ—Ä—Ç‚Ä¶");

    // –û–±–æ—Ä–∞—á–∏–≤–∞–µ–º direct‚Äëtransport –≤ Nodemailer
    const transporter = createTransport(
      directTransport({
        name: 'stenford.monster',  // EHLO‚Äë–∏–º—è –≤–∞—à–µ–≥–æ –¥–æ–º–µ–Ω–∞
        logger: true,
        debug: true,
      })
    );

    // –ù–ï –≤—ã–∑—ã–≤–∞–µ–º transporter.verify() ‚Äî –≤ direct‚Äë—Ä–µ–∂–∏–º–µ –æ–Ω–æ –ø—ã—Ç–∞–µ—Ç—Å—è –ø–∏–Ω–≥–æ–≤–∞—Ç—å localhost:587 –∏ –ø–∞–¥–∞–µ—Ç.

    const info = await transporter.sendMail({
      from: '"Maddison Foo Koch üëª" <maddison53@stenford.monster>',
      to: recipients,
      subject,
      text,
    });

    console.log(`‚úÖ [send] –ü–∏—Å—å–º–æ –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω–æ (messageId=${info.messageId})`);
    return res.sendStatus(200);
  } catch (err) {
    console.error("‚ùå [send] –û—à–∏–±–∫–∞ –æ—Ç–ø—Ä–∞–≤–∫–∏ —á–µ—Ä–µ–∑ direct SMTP:", err);
    return res.status(500).json({ error: "Server error. Try again later." });
  }
});

module.exports = router;
